{"ast":null,"code":"var _jsxFileName = \"/Users/jack/Documents/GitHub/Pomodoro-Timer/src/pomodoro/Pomodoro.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport \"./Pomodoro.css\"; // These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  return { ...prevState,\n    timeRemaining\n  };\n}\n\nfunction fmtMSS(s) {\n  return (s - (s %= 60)) / 60 + (9 < s ? \":\" : \":0\") + s;\n}\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\n\n\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return currentSession => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60\n      };\n    }\n\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60\n    };\n  };\n}\n\nfunction Pomodoro() {\n  _s();\n\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false); // The current session - null where there is no session running\n\n  const [session, setSession] = useState(null);\n  const [elapsed, setElapsed] = useState(0); // ToDo: Allow the user to adjust the focus and break duration.\n\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [aria, setAria] = useState(0);\n  const [breakLeft, setBreakLeft] = useState(0);\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n\n  useInterval(() => {\n    setBreakLeft(breakLeft + 1);\n\n    if (session.timeRemaining === 0) {\n      new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n      setSession(nextSession(focusDuration, breakDuration));\n    }\n\n    setSession(nextTick);\n    const left = session.timeRemaining;\n\n    if (session.label === \"Focusing\") {\n      setAria(100 * (focusDuration * 60 - left) / (focusDuration * 60));\n    } else {\n      setAria(100 * (breakDuration * 60 - left) / (breakDuration * 60));\n    }\n  }, isTimerRunning ? 1000 : null); //    setAriaValue(100*(focusTime * 60 - focusRun)/(focusTime*60))\n  //  }\n  //   else {setAriaValue(100*(breakTime * 60 - breakRun)/(breakTime*60))\n\n  useInterval(() => {\n    if (session && session.timeRemaining) {\n      return setElapsed(elapsed + 1);\n    }\n  }, 1000);\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n\n  function playPause() {\n    setIsTimerRunning(prevState => {\n      const nextState = !prevState;\n\n      if (nextState) {\n        setSession(prevStateSession => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60\n            };\n          }\n\n          return prevStateSession;\n        });\n      }\n\n      return nextState;\n    });\n  } //   console.log(session && Math.abs(session.timeRemaining -focusDuration*60), 'elapsed')\n  //   console.log(session && (focusDuration * 60 - session.timeRemaining)*.1)\n  //   console.log(focusDuration - elapsed)\n  //   console.log((session.label.toLowerCase().indexOf(\"ocus\") > 0 ? focusDuration : breakDuration)*100)\n  //   console.log(session.timeRemaining/(session.label.toLowerCase().indexOf(\"ocus\") > 0 ? focusDuration : breakDuration)*100)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pomodoro\",\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\",\n      integrity: \"sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z\",\n      crossorigin: \"anonymous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://cdnjs.cloudflare.com/ajax/libs/open-iconic/1.1.1/font/css/open-iconic-bootstrap.min.css\",\n      integrity: \"sha512-UyNhw5RNpQaCai2EdC+Js0QL4RlVmiq41DkmCJsRV3ZxipG2L0HhTqIf/H9Hp8ez2EnFlkBnjRGJU2stW3Lj+w==\",\n      crossorigin: \"anonymous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group btn-group-lg mb-2\",\n          role: \"group\",\n          \"aria-label\": \"Timer controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary\",\n            \"data-testid\": \"play-pause\",\n            title: \"Start or pause timer\",\n            onClick: playPause,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classNames({\n                oi: true,\n                \"oi-media-play\": !isTimerRunning,\n                \"oi-media-pause\": isTimerRunning\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            disabled: !isTimerRunning,\n            className: \"btn btn-secondary\",\n            \"data-testid\": \"stop\",\n            title: \"Stop the session\",\n            onClick: () => {\n              setSession(null);\n              setIsTimerRunning(false);\n              setElapsed(0);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"oi oi-media-stop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [session && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            \"data-testid\": \"session-title\",\n            children: [session && session.label, \" for\", \" \", (\"0\" + (session.label.toLowerCase().indexOf(\"ocus\") > 0 ? focusDuration : breakDuration)).substr(-2), \":00 minutes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"lead\",\n            \"data-testid\": \"session-sub-title\",\n            children: [session && fmtMSS(session.timeRemaining), \" remaining\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), session && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress\",\n            style: {\n              height: \"20px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              role: \"progressbar\",\n              \"aria-valuemin\": \"0\",\n              \"aria-valuemax\": \"100\",\n              \"aria-valuenow\": aria // TODO: Increase aria-valuenow as elapsed time increases\n              ,\n              style: {\n                width: `${aria}%`\n              } // TODO: Increase width % as elapsed time increases\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timers\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group input-group-lg mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"input-group-text\",\n              \"data-testid\": \"duration-focus\",\n              children: [\"Focus Duration: \", (\"0\" + focusDuration).substr(-2), \":00\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group-append\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-secondary\",\n                \"data-testid\": \"decrease-focus\",\n                onClick: () => {\n                  if (focusDuration > 5) setFocusDuration(focusDuration - 5);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"oi oi-minus\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-secondary\",\n                \"data-testid\": \"increase-focus\",\n                onClick: () => {\n                  if (focusDuration < 60) setFocusDuration(focusDuration + 5);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"oi oi-plus\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"float-right\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group input-group-lg mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"input-group-text\",\n                \"data-testid\": \"duration-break\",\n                children: [\"Break Duration: \", (\"0\" + breakDuration).substr(-2), \":00\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group-append\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-secondary\",\n                  \"data-testid\": \"decrease-break\",\n                  onClick: () => {\n                    if (breakDuration > 1) {\n                      setBreakDuration(breakDuration - 1);\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"oi oi-minus\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-secondary\",\n                  \"data-testid\": \"increase-break\",\n                  onClick: () => {\n                    if (breakDuration < 15) {\n                      setBreakDuration(breakDuration + 1);\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"oi oi-plus\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pomodoro, \"BjibICpowvVFkThqPG4wzzvumEM=\", false, function () {\n  return [useInterval, useInterval];\n});\n\n_c = Pomodoro;\nexport default Pomodoro;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pomodoro\");","map":{"version":3,"sources":["/Users/jack/Documents/GitHub/Pomodoro-Timer/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","nextTick","prevState","timeRemaining","Math","max","fmtMSS","s","nextSession","focusDuration","breakDuration","currentSession","label","Pomodoro","isTimerRunning","setIsTimerRunning","session","setSession","elapsed","setElapsed","setFocusDuration","setBreakDuration","aria","setAria","breakLeft","setBreakLeft","Audio","play","left","playPause","nextState","prevStateSession","oi","toLowerCase","indexOf","substr","height","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport \"./Pomodoro.css\"\n\n// These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  return {\n    ...prevState,\n    timeRemaining,\n  };\n}\n\nfunction fmtMSS(s) {\n  return (s - (s %= 60)) / 60 + (9 < s ? \":\" : \":0\") + s;\n}\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return (currentSession) => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60,\n      };\n    }\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60,\n    };\n  };\n}\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  // The current session - null where there is no session running\n  const [session, setSession] = useState(null);\n  const [elapsed, setElapsed] = useState(0);\n\n  // ToDo: Allow the user to adjust the focus and break duration.\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [aria, setAria] = useState(0);\n  const [breakLeft, setBreakLeft] = useState(0);\n\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n  useInterval(\n    () => {\n      setBreakLeft(breakLeft + 1);\n      if (session.timeRemaining === 0) {\n        new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n        setSession(nextSession(focusDuration, breakDuration));\n      }\n      setSession(nextTick);\n      const left = session.timeRemaining;\n      if (session.label === \"Focusing\") {\n        setAria((100 * (focusDuration * 60 - left)) / (focusDuration * 60));\n      } else {\n        setAria((100 * (breakDuration * 60 - left)) / (breakDuration * 60));\n      }\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  //    setAriaValue(100*(focusTime * 60 - focusRun)/(focusTime*60))\n  //  }\n  //   else {setAriaValue(100*(breakTime * 60 - breakRun)/(breakTime*60))\n\n  useInterval(() => {\n    if (session && session.timeRemaining) {\n      return setElapsed(elapsed + 1);\n    }\n  }, 1000);\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n  function playPause() {\n    setIsTimerRunning((prevState) => {\n      const nextState = !prevState;\n      if (nextState) {\n        setSession((prevStateSession) => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60,\n            };\n          }\n          return prevStateSession;\n        });\n      }\n      return nextState;\n    });\n  }\n  //   console.log(session && Math.abs(session.timeRemaining -focusDuration*60), 'elapsed')\n  //   console.log(session && (focusDuration * 60 - session.timeRemaining)*.1)\n  //   console.log(focusDuration - elapsed)\n  //   console.log((session.label.toLowerCase().indexOf(\"ocus\") > 0 ? focusDuration : breakDuration)*100)\n  //   console.log(session.timeRemaining/(session.label.toLowerCase().indexOf(\"ocus\") > 0 ? focusDuration : breakDuration)*100)\n\n  return (\n    <div className=\"pomodoro\">\n      <link\n        rel=\"stylesheet\"\n        href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\"\n        integrity=\"sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z\"\n        crossorigin=\"anonymous\"\n      />\n      <link\n        rel=\"stylesheet\"\n        href=\"https://cdnjs.cloudflare.com/ajax/libs/open-iconic/1.1.1/font/css/open-iconic-bootstrap.min.css\"\n        integrity=\"sha512-UyNhw5RNpQaCai2EdC+Js0QL4RlVmiq41DkmCJsRV3ZxipG2L0HhTqIf/H9Hp8ez2EnFlkBnjRGJU2stW3Lj+w==\"\n        crossorigin=\"anonymous\"\n      />\n  \n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session. and disable the stop button when there is no active session */}\n            {/* TODO: Disable the stop button when there is no active session */}\n            <button\n              type=\"button\"\n              disabled={!isTimerRunning}\n              className=\"btn btn-secondary\"\n              data-testid=\"stop\"\n              title=\"Stop the session\"\n              onClick={() => {\n                setSession(null);\n                setIsTimerRunning(false);\n                setElapsed(0);\n              }}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n        {session && (\n          <div className=\"row mb-2\">\n            <div className=\"col\">\n              {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n              <h2 data-testid=\"session-title\">\n                {session && session.label} for{\" \"}\n                {(\n                  \"0\" +\n                  (session.label.toLowerCase().indexOf(\"ocus\") > 0\n                    ? focusDuration\n                    : breakDuration)\n                ).substr(-2)}\n                :00 minutes\n              </h2>\n              {/* TODO: Update message below correctly format the time remaining in the current session */}\n              <p className=\"lead\" data-testid=\"session-sub-title\">\n                {session && fmtMSS(session.timeRemaining)} remaining\n              </p>\n            </div>\n          </div>\n        )}\n        {session && (\n          <div className=\"row mb-2\">\n            <div className=\"col\">\n              <div className=\"progress\" style={{ height: \"20px\" }}>\n                <div\n                  className=\"progress-bar\"\n                  role=\"progressbar\"\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                  aria-valuenow={aria} // TODO: Increase aria-valuenow as elapsed time increases\n                  style={{ width: `${aria}%` }} // TODO: Increase width % as elapsed time increases\n                />\n              </div>\n            </div>\n          </div>\n        )}\n            <div className=\"timers\">\n        <div className=\"\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {(\"0\" + focusDuration).substr(-2)}:00\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                onClick={() => {\n                  if (focusDuration > 5) setFocusDuration(focusDuration - 5);\n                }}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                onClick={() => {\n                  if (focusDuration < 60) setFocusDuration(focusDuration + 5);\n                }}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {(\"0\" + breakDuration).substr(-2)}:00\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  onClick={() => {\n                    if (breakDuration > 1) {\n                      setBreakDuration(breakDuration - 1);\n                    }\n                  }}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  onClick={() => {\n                    if (breakDuration < 15) {\n                      setBreakDuration(breakDuration + 1);\n                    }\n                  }}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}